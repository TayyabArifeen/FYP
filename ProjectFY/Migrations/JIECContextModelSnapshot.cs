// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectFY.Models;

namespace ProjectFY.Migrations
{
    [DbContext(typeof(JIECContext))]
    partial class JIECContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectFY.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ProductCategory");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ProductName");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float")
                        .HasColumnName("ProductPrice");

                    b.Property<string>("ProductSubCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ProductSubCategory");

                    b.Property<string>("SKUNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SKUNumber");

                    b.HasKey("ProductID");

                    b.HasAlternateKey("SKUNumber");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ProjectFY.Models.ProductDetails", b =>
                {
                    b.Property<int>("ProductDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductDetailsID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MonthOfSale")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("MonthOfSale");

                    b.Property<double>("NumberOfSales")
                        .HasColumnType("float")
                        .HasColumnName("NumberOfSales");

                    b.Property<int>("ProductID")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.HasKey("ProductDetailsID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductDetails");
                });

            modelBuilder.Entity("ProjectFY.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("UserEmail");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("UserName");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("UserPassword");

                    b.Property<int>("UserRole")
                        .HasColumnType("int")
                        .HasColumnName("UserRole");

                    b.HasKey("UserID");

                    b.HasAlternateKey("UserEmail");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ProjectFY.Models.ProductDetails", b =>
                {
                    b.HasOne("ProjectFY.Models.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjectFY.Models.Product", b =>
                {
                    b.Navigation("ProductDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
